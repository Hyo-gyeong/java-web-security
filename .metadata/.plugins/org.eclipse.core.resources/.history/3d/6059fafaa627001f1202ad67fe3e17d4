package pw_manager;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Arrays;

import enums.FilePath;


public class Password {
	public static boolean checkPassWord(char[] pwArr) throws IOException {
		new Salt();
		byte[] salt = readFromFile(FilePath.SALT.getPath());
		StringBuffer sb = new StringBuffer();
		for(byte b : salt) {
			sb.append(String.format("%02x", b));
		};
		System.out.println(sb+"\n");
		
		sb = new StringBuffer();
		byte[] result = getEncrypt(pwArr, salt.toString());
		for(byte b : result) {
			sb.append(String.format("%02x", b));
		};
		System.out.println(sb+"\n");
		
		sb = new StringBuffer();
		byte[] origin = readFromFile(FilePath.HASHED_PW.getPath());
		for(byte b : origin) {
			sb.append(String.format("%02x", b));
		};
		System.out.println("Origin:"+sb+"\n");
		
		return Arrays.equals(result, origin);
	}
	
	private static byte[] getEncrypt(char[] pwArr, String salt) throws IOException {
		byte[] pwSalt = null;
		StringBuilder sb = new StringBuilder();
		for (char c : pwArr) {
			sb.append(c);
		}
		String pw = sb.toString();
		System.out.println("pw = :"+pw);
		try {
			//1. SHA256 알고리즘 객체 생성
			MessageDigest md = MessageDigest.getInstance("SHA-256");
			
			//2. 비밀번호와 salt 합친 문자열에 SHA 256 적용
			md.update((pw+salt).getBytes());
			pwSalt = md.digest();
			
		} catch (NoSuchAlgorithmException e) {
			e.printStackTrace();
		}
//		saveHashToFile(pwSalt, file);
		return pwSalt;
    }
	
	private static byte[] readFromFile(String filePath) {
        byte[] fileData = null;
        
        try (FileInputStream in = new FileInputStream(filePath)) {
            fileData = in.readAllBytes();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        
        return fileData;
    } 
	private static void saveHashToFile(byte[] hashValue, String filePath) throws IOException {
		try (FileOutputStream out = new FileOutputStream(filePath)) {
            out.write(hashValue);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }	
	}
	

}
