package crypto_manager;

import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.security.PublicKey;

import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;

import enums.Algorithm;

public class EncryptionUtils {
	public static byte[] encryptSecretKey(SecretKey sk, PublicKey pk) {
    	byte[] byteKey = sk.getEncoded();
        
        Cipher cipher;
		try {
			cipher = Cipher.getInstance(Algorithm.RSA.getAlgorithm());
		} catch (NoSuchAlgorithmException | NoSuchPaddingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
        cipher.init(Cipher.ENCRYPT_MODE, pk);
        byte[] result = cipher.doFinal(byteKey);
        return result;
    }
	
	public static Cipher encrypt(SecretKey sk) throws Exception {
		Cipher cipher = Cipher.getInstance(Algorithm.AES.getAlgorithm());
        cipher.init(Cipher.ENCRYPT_MODE, sk);
        return cipher;
    }
}
